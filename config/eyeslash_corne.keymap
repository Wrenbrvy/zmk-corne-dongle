#define ZMK_POINTING_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 25   // 10

#include <input/processors.dtsi>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

&mmv_input_listener { input-processors = <&zip_xy_scaler 2 1>; };

&msc_input_listener { input-processors = <&zip_scroll_scaler 2 1>; };

&msc {
    acceleration-exponent = <1>;      // 0
    time-to-max-speed-ms = <100>;       // 300
    delay-ms = <0>;                   // 0
};

&mmv {
    time-to-max-speed-ms = <500>;
    acceleration-exponent = <1>;
    trigger-period-ms = <16>;
};

/ {
    behaviors {
        td0: td0 {
            compatible = "zmk,behavior-tap-dance";
            display-name = "Shift/Caps Lock Tap Dance";
            #binding-cells = <0>;
            bindings = <&kp LEFT_ALT>, <&kp LEFT_WIN>;
        };
    };

    rgb_encoder: rgb_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&rgb_ug RGB_BRI>, <&rgb_ug RGB_BRD>;
    };

    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <100>;
    };

    combos {
        compatible = "zmk,combos";

        Escape {
            bindings = <&kp ESCAPE>;
            key-positions = <0 1>;
        };

        Delete {
            bindings = <&kp DELETE>;
            key-positions = <11 12>;
        };

        mouse_layer {
            bindings = <&tog 4>;
            key-positions = <34 20>;
        };

        setting_layer {
            bindings = <&tog 5>;
            key-positions = <28 29 41 40>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            display-name = "QWERTY";
            bindings = <
&kp TAB    &kp Q  &kp W  &kp E  &kp R  &kp T                              &kp UP                &kp Y      &kp U  &kp I      &kp O    &kp P     &kp BSPC
&kp LCTRL  &kp A  &kp S  &kp D  &kp F  &kp G                    &kp LEFT  &kp ENTER  &kp RIGHT  &kp H      &kp J  &kp K      &kp L    &kp SEMI  &kp SQT
&kp LSHFT  &kp Z  &kp X  &kp C  &kp V  &kp B      &kp C_MUTE              &kp DOWN              &kp N      &kp M  &kp COMMA  &kp DOT  &kp FSLH  &kp RET
                         &td0   &mo 1  &kp SPACE                                                &kp RSHFT  &mo 2  &kp RALT
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>;
        };

        lower_layer {
            display-name = "NUMBER";
            bindings = <
&kp GRAVE  &kp N1   &kp N2   &kp N3   &kp N4   &kp N5                            &mmv MOVE_UP                     &kp N6           &kp N7  &kp N8  &kp N9  &kp N0     &kp BACKSLASH
&kp F13    &kp F14  &kp F15  &kp F16  &kp F17  &kp F18           &mmv MOVE_LEFT  &mkp LCLK       &mmv MOVE_RIGHT  &none            &none   &none   &none   &none      &none
&kp F19    &kp F20  &kp F21  &kp F22  &kp F23  &kp F24  &none                    &mmv MOVE_DOWN                   &none            &none   &none   &none   &kp MINUS  &kp EQUAL
                             &none    &none    &none                                                              &kp RIGHT_SHIFT  &mo 2   &none
            >;
        };

        raise_layer {
            display-name = "Fn";
            bindings = <
&kp F12  &kp F1  &kp F2  &kp F3  &kp F4  &kp F5                             &none         &kp F6   &kp F7    &kp F8         &kp F9  &kp F10  &kp F11
&none    &none   &none   &none   &none   &none                       &none  &none  &none  &kp INS  &kp HOME  &kp PAGE_UP    &none   &none    &none
&none    &none   &none   &none   &none   &none   &kp C_PLAY_PAUSE           &none         &kp DEL  &kp END   &kp PAGE_DOWN  &none   &none    &none
                         &none   &mo 1   &none                                            &none    &none     &none
            >;

            sensor-bindings = <&inc_dec_kp C_NEXT C_PREVIOUS>;
        };

        combo_layer {
            display-name = "SETTING";
            bindings = <
&kp PRINTSCREEN  &none  &none  &none  &none  &kp LEFT_BRACKET                      &none         &kp RIGHT_BRACKET      &none  &none  &kp INS     &kp HOME  &kp PAGE_UP
&none            &none  &none  &none  &none  &kp LEFT_BRACE                 &none  &none  &none  &kp RIGHT_BRACE        &none  &none  &kp DELETE  &kp END   &kp PAGE_DOWN
&none            &none  &none  &none  &none  &kp LEFT_PARENTHESIS  &none           &none         &kp RIGHT_PARENTHESIS  &none  &none  &none       &none     &none
                               &none  &none  &none                                               &none                  &none  &none
            >;
        };

        mouse_layer {
            bindings = <
&none  &none  &none      &none      &none      &mkp MB5                               &mmv MOVE_UP                     &none  &none  &none  &none  &none  &none
&none  &none  &mkp RCLK  &mkp MCLK  &mkp LCLK  &mkp MB4               &mmv MOVE_LEFT  &mkp LCLK       &mmv MOVE_RIGHT  &none  &none  &none  &none  &none  &none
&none  &none  &none      &none      &none      &none     &mkp MCLK                    &mmv MOVE_DOWN                   &none  &none  &none  &none  &none  &none
                         &none      &none      &none                                                                   &none  &none  &none
            >;

            sensor-bindings = <&scroll_encoder>;
        };

        setting_layer {
            bindings = <
&bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4                           &none                &rgb_ug RGB_TOG  &rgb_ug RGB_HUI  &rgb_ug RGB_SAI  &rgb_ug RGB_BRI  &rgb_ug RGB_SPI  &none
&none       &none         &none         &none         &none         &none                           &none  &out OUT_TOG  &none  &rgb_ug RGB_EFF  &rgb_ug RGB_HUD  &rgb_ug RGB_SAD  &rgb_ug RGB_BRD  &rgb_ug RGB_SPD  &none
&none       &none         &none         &none         &none         &none         &studio_unlock           &none                &none            &none            &none            &none            &none            &none
                                        &none         &none         &none                                                       &none            &none            &none
            >;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        L3 {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };
};
